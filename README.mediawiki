== DDWRT Misc. Scripts ==

* Init filesystem structure for usb extended storage
* allow vpn (i.e. pptp) dlna access by routing broadcast and multicast requests correctly (i.e. requests made by upnp discovery)
* startup scripts to auto-mount usb and correctly extend storage
* Documents

== Extra USB Storage ==

By default most routers that run DDWRT have little persistant storage. This is problematic when you wish to install other packages using <code>opkg</code>. To remedy this, we supplement the internal storage with external usb storage.

=== Init ===
<img src="screenshots/usb_config.png" />
<p align="center">Ensure the usb storage is enabled and your device is plugged in and detected.</p>
Edit <code>ROOT</code> in <code>init_usb_fs.sh</code> to match your mount location (i.e. /tmp/mnt/disc0-part1)

<img src="screenshots/ssh_enabled_1.png" />
<img src="screenshots/ssh_enabled_2.png" />
<p align="center">Enable ssh</p>

Run the following.
<pre>
ssh root@192.168.1.1 'sh -s' < init_usb_fs.sh
ssh root@192.168.1.1 'sh -s' < startup_usb_fs.sh
</pre>

=== Startup ===

Each time the router reboots we need to remount the usb folders. To do so we use the ddwrt web interface <b>Administration -> Commands</b>. Paste the <code>startup_usb_fs.sh</code> into the <b>Command Shell</b> text box then click <b>Save Startup</b>.

=== Extras ===

Now that you have extra space you can install extra packages (i.e. minidlna, bitorrent, etc.). However, they will install into places the "system" doesn't know about. Specifically the libraries that are installed will now be known. Thus, we need to make them known.
<pre>
opkg update
opkg install libconfig
</pre>

Edit <code>/etc/ld.so.conf</code> and add the following to the <b>TOP</b>
<pre>
/opt/lib/
/opt/usr/lib/
</pre>

Tell the system to update the library path information.
<pre>
ldconfig
</pre>
